{"version":3,"file":"static/js/828.1a6a84b3.chunk.js","mappings":"sQAOMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGNC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CAAQP,cAAeA,EAAeQ,SAXjB,SAACC,EAAD,GAAuB,IAAjBC,EAAgB,EAAhBA,UACnBT,EAA2CQ,EAA3CR,KAAMC,EAAqCO,EAArCP,MAAOC,EAA8BM,EAA9BN,SACrB,GAAIA,IAD+CM,EAApBL,gBAE7B,OAAOO,EAAAA,GAAAA,MAAY,yBAErBL,GAASM,EAAAA,EAAAA,IAAa,CAAEX,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAErCO,GACD,EAGC,UACE,UAAC,IAAD,YACE,SAAC,EAAAG,EAAD,CACEC,GAAIC,EAAAA,GACJC,QAAS,CACPC,UAAW,cAEbC,MAAO,CAAC,OAAQ,MAAO,OACvBC,YAAY,wDACZC,QAAQ,SACRC,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAGV,SAAC,EAAAX,EAAD,CACEC,GAAIC,EAAAA,GACJC,QAAS,CACPC,UAAW,cAEbC,MAAO,CAAC,OAAQ,MAAO,OACvBC,YAAY,2BACZC,QAAQ,SACRC,KAAK,QACLpB,KAAK,QACLuB,UAAQ,KAGV,SAAC,EAAAX,EAAD,CACEC,GAAIC,EAAAA,GACJC,QAAS,CACPC,UAAW,cAEbC,MAAO,CAAC,OAAQ,MAAO,OACvBC,YAAY,8BACZC,QAAQ,SACRC,KAAK,WACLpB,KAAK,WACLuB,UAAQ,KAGV,SAAC,EAAAX,EAAD,CACEC,GAAIC,EAAAA,GACJC,QAAS,CACPC,UAAW,cAEbC,MAAO,CAAC,OAAQ,MAAO,OACvBC,YAAY,8DACZC,QAAQ,SACRC,KAAK,WACLpB,KAAK,kBACLuB,UAAQ,KAGV,SAAC,IAAD,CACEC,YAAY,WACZT,QAAS,CACPC,UAAW,cAEbI,KAAK,SALP,wBAYP,E,UC7Fc,SAASK,IACtB,OACE,SAAC,IAAD,WACE,SAACrB,EAAD,KAGL,C,+ECNYsB,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,gI,oGCCVE,EAAUF,EAAAA,GAAAA,QAAH,8aAOMG,EAAuBC,E","sources":["components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage/RegisterPage.jsx","components/FormFild/FormFild.styled.js","components/StyledSection/StyledSection.js"],"sourcesContent":["import { Formik, Field } from 'formik';\nimport { Button, Input } from '@chakra-ui/react';\nimport { StyledForm } from 'components/FormFild/FormFild.styled';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-hot-toast';\nimport { registerUser } from 'Redux/authOperations';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const onHandleSubmit = (e, { resetForm }) => {\n    const { name, email, password, confirmPassword } = e;\n    if (password !== confirmPassword) {\n      return toast.error('Password do not match');\n    }\n    dispatch(registerUser({ name, email, password }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onHandleSubmit}>\n      <StyledForm>\n        <Input\n          as={Field}\n          _active={{\n            transform: 'scale(1.5)',\n          }}\n          width={['100%', '70%', '40%']}\n          placeholder=\"Enter Name 🙋🏼‍♀️\"\n          variant=\"filled\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <Input\n          as={Field}\n          _active={{\n            transform: 'scale(1.5)',\n          }}\n          width={['100%', '70%', '40%']}\n          placeholder=\"Enter Email 📧\"\n          variant=\"filled\"\n          type=\"email\"\n          name=\"email\"\n          required\n        />\n\n        <Input\n          as={Field}\n          _active={{\n            transform: 'scale(1.5)',\n          }}\n          width={['100%', '70%', '40%']}\n          placeholder=\"Enter Password 🛂\"\n          variant=\"filled\"\n          type=\"password\"\n          name=\"password\"\n          required\n        />\n\n        <Input\n          as={Field}\n          _active={{\n            transform: 'scale(1.5)',\n          }}\n          width={['100%', '70%', '40%']}\n          placeholder=\"Confirm Password 👮🏻‍♀️\"\n          variant=\"filled\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          required\n        />\n\n        <Button\n          colorScheme=\"telegram\"\n          _active={{\n            transform: 'scale(1.5)',\n          }}\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Section } from 'components/StyledSection/StyledSection';\n\nexport default function RegisterPage() {\n  return (\n    <Section>\n      <RegisterForm />\n    </Section>\n  );\n}\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 25px;\n  padding-top: 58px;\n`;\n","import styled from 'styled-components';\nimport wallPagePhoto from '../../Photo/Wall.png';\nimport homePagePhoto from '../../Photo/homePage.png';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 130px);\n\n  padding: 40px;\n\n  background-image: url(${wallPagePhoto}), url(${homePagePhoto});\n  background-size: 50%, 20%;\n  background-position: right 96%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  animation: 0.8s show ease;\n\n  @keyframes show {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n"],"names":["initialValues","name","email","password","confirmPassword","RegisterForm","dispatch","useDispatch","onSubmit","e","resetForm","toast","registerUser","I","as","Field","_active","transform","width","placeholder","variant","type","pattern","title","required","colorScheme","RegisterPage","StyledForm","styled","Form","Section","wallPagePhoto","homePagePhoto"],"sourceRoot":""}